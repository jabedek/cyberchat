{"version":3,"sources":["components/Header/Header.js","components/Button/Button.js","service/socket.js","utils/index.js","components/JoinPage/JoinPage.js","components/ChatPage/SideBar.js","components/ChatPage/MessagesBar.js","components/ChatPage/NewMessageBar.js","components/ChatPage/ChatPage.js","components/List/List.js","App.js","index.js","components/JoinPage/panorama.png"],"names":["Header","className","data-text","Button","props","onClick","handleClick","classes","text","socket","io","generateUsername","prefixes","suffixes","suf","Math","floor","random","length","JoinPage","name","setState","username","registerUsername","state","toLowerCase","console","log","emit","room","time","moment","format","classAnimate","btnVisibility","display","formVisibility","height","border","width","this","on","message","setTimeout","alt","id","src","panorama","style","onFocus","onSubmit","e","preventDefault","type","spellCheck","maxLength","minLength","required","autoComplete","value","onChange","event","target","htmlFor","defaultValue","to","React","Component","SideBar","useState","setUsername","setRoom","users","setUsers","useEffect","listUsers","map","user","index","key","renderUsers","MessagesBar","messages","setMessages","messagesRef","setMessagesRef","scrollTop","scrollHeight","children","firstUsername","innerText","lastMessage","classList","toggle","ref","el","NewMessageBar","sendMessage","placeholder","onKeyDown","keyCode","shiftKey","ChatPage","_isMounted","connected","msg","newMessages","botMessage","basename","List","getList","fetch","then","res","json","list","item","App","exact","path","component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.752457cc.chunk.js","sourcesContent":["import \"./Header.scss\";\r\nimport React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <header className=\"header\">\r\n        <h1\r\n          className=\"logo !glitch \"\r\n          data-text=\"\r\nglitch\"\r\n        >\r\n          cyberchat\r\n        </h1>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nconst withHeader = (WrappedComponent) => {\r\n  return class WithHeader extends React.Component {\r\n    render() {\r\n      return (\r\n        <>\r\n          <Header />\r\n          <WrappedComponent {...this.props} />\r\n        </>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport { Header, withHeader };\r\n","import React from \"react\";\r\n\r\nexport const Button = (props) => {\r\n  return (\r\n    <p onClick={props.handleClick} className={props.classes}>\r\n      {props.text}\r\n    </p>\r\n  );\r\n};\r\n","import io from \"socket.io-client\";\r\nconst url = \"https://afternoon-tundra-39737.herokuapp.com/\";\r\n// const url = \"http://localhost:5000/\";\r\n\r\nexport const socket = io(url);\r\n","export const generateUsername = () => {\r\n  const prefixes = [\"unique\", \"rare\", \"exceptional\"];\r\n  const suffixes = [\"entity\", \"individual\", \"subject\", \"one\"];\r\n  const suf = suffixes[Math.floor(Math.random() * (suffixes.length - 0)) + 0];\r\n  const pre = prefixes[Math.floor(Math.random() * (prefixes.length - 0)) + 0];\r\n  const name = pre + \"-\" + suf;\r\n  return name;\r\n  //   this.setState({ username: name });\r\n};\r\n","import React from \"react\";\r\nimport { Header } from \"../Header/Header\";\r\nimport \"./JoinPage.scss\";\r\nimport panorama from \"./panorama.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"../Button/Button\";\r\nimport moment from \"moment\";\r\nimport { socket } from \"../../service/socket\";\r\nimport { generateUsername } from \"../../utils\";\r\n\r\nexport default class JoinPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      classAnimate: \"animation-appear\",\r\n      btnVisibility: { display: \"none\" },\r\n      formVisibility: {\r\n        height: \"0\",\r\n        border: \"none\",\r\n        width: \"0\",\r\n      },\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({\r\n      username: \"\",\r\n      classAnimate: \"animation-appear\",\r\n      btnVisibility: { display: \"none\" },\r\n      formVisibility: {\r\n        height: \"0\",\r\n        border: \"none\",\r\n        width: \"0\",\r\n      },\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    socket.on(\"SERVER_WELCOME\", (message) => {\r\n      console.log(\"SERVER_WELCOME:\\n\", message);\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        classAnimate: \"\",\r\n        formVisibility: {\r\n          height: \"12vh\",\r\n          width: \"40vw\",\r\n          border: \"0.14rem solid rgba(255, 255, 0, 0.6)\",\r\n        },\r\n      });\r\n\r\n      this.setState({ username: generateUsername() });\r\n    }, 800);\r\n  }\r\n\r\n  handleClick = (name) => {\r\n    this.setState({ username: name });\r\n  };\r\n\r\n  registerUsername = () => {\r\n    let username = this.state.username.toLowerCase();\r\n    console.log((\">>>\", username));\r\n\r\n    if (username !== \"cyberchat\") {\r\n      socket.emit(\"USER_JOIN\", {\r\n        username: this.state.username,\r\n        room: \"Main\",\r\n        time: moment().format(\"h:mm:ss\"),\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"Join !glitch \"\r\n          data-text=\"\r\n  glitch\"\r\n        >\r\n          <div className=\"join-bg\">\r\n            <div className=\"panorama animation-bg-opacity\">\r\n              <img\r\n                alt=\"city\"\r\n                className=\"panorama__image\"\r\n                id=\"panoramaImage\"\r\n                src={panorama}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <Header />\r\n\r\n          <form\r\n            className={`join-form ${this.state.classAnimate}`}\r\n            id=\"joinForm\"\r\n            style={this.state.formVisibility}\r\n            onFocus={() => {\r\n              this.setState({\r\n                btnVisibility: { display: \"flex\" },\r\n              });\r\n            }}\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              this.registerUsername();\r\n            }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              id=\"usernameInput\"\r\n              name=\"username\"\r\n              className=\"join-form__input \"\r\n              spellCheck=\"false\"\r\n              maxLength=\"25\"\r\n              minLength=\"1\"\r\n              required\r\n              autoComplete=\"off\"\r\n              value={this.state.username}\r\n              onChange={(event) => {\r\n                this.setState({ username: event.target.value });\r\n              }}\r\n            />\r\n            <p className=\"join-form__hint\" id=\"joinFormHint\">\r\n              <span id=\"usernameLength\">{this.state.username.length}</span> / 25\r\n            </p>\r\n            <div className=\"form-control\" style={{ display: \"none \" }}>\r\n              <label htmlFor=\"room\">Room</label>\r\n              <select name=\"room\" id=\"room\">\r\n                <option defaultValue=\"Ogólne\">Ogólne</option>\r\n                <option value=\"Memesy\">Memesy</option>\r\n                <option value=\"Nowy\" id=\"newRoom\">\r\n                  nowy\r\n                </option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"button-wrapper\" style={this.state.btnVisibility}>\r\n              <Link to=\"chat\">\r\n                <Button\r\n                  handleClick={this.registerUsername}\r\n                  text={\"Go\"}\r\n                  classes={\"join-button\"}\r\n                />\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import \"./SideBar.scss\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nexport const SideBar = (props) => {\r\n  const [username, setUsername] = useState(\"Elo\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setUsername(props.username);\r\n    setRoom(props.room);\r\n    setUsers(props.users);\r\n  }, [props.username, props.room, props.users]);\r\n\r\n  const renderUsers = () => {\r\n    if (users) {\r\n      const listUsers = users.map((user, index) => (\r\n        <li key={index}>{user.username}</li>\r\n      ));\r\n      return <ul className=\"sidebar__users\">{listUsers}</ul>;\r\n    }\r\n\r\n    return <p className=\"sidebar__users\">{users.length}</p>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <label className=\"sidebar__header\">Status</label>\r\n\r\n      <ul className=\"sidebar__list\">\r\n        <li className=\"sidebar__item\">\r\n          <i className=\"cube icon\"></i>\r\n          Room:\r\n          <p className=\"sidebar__value\">{room}</p>\r\n        </li>\r\n\r\n        <li className=\"sidebar__item\">\r\n          <i className=\" eye icon\"></i>\r\n          You:\r\n          <p className=\"sidebar__value\">{username}</p>\r\n        </li>\r\n\r\n        <li className=\"sidebar__item\">\r\n          <i className=\" users icon\"></i>\r\n          Users:\r\n          {renderUsers()}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./MessagesBar.scss\";\r\n\r\nexport const MessagesBar = (props) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [messagesRef, setMessagesRef] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (messagesRef) {\r\n      messagesRef.scrollTop = messagesRef.scrollHeight;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    setMessages(props.messages);\r\n  }, [props.messages]);\r\n\r\n  useEffect(() => {\r\n    if (messagesRef && messagesRef.children.length) {\r\n      const firstMessage = messagesRef.children[0]; // username + text + time\r\n      const firstUsername = firstMessage.children[0].children[0];\r\n\r\n      console.log(firstUsername);\r\n      if (firstUsername.innerText === \"Cyberchat\") {\r\n        firstUsername.style = \"color:rgb(160,250,160)\";\r\n      }\r\n      const lastMessage = messagesRef.children[messagesRef.children.length - 1];\r\n\r\n      lastMessage.classList.toggle(\"animation-new-message\");\r\n      // firstMessage.style.color = \"#fff\";\r\n\r\n      setTimeout(() => {\r\n        lastMessage.classList.toggle(\"animation-new-message\");\r\n      }, 550);\r\n    }\r\n  }, [messages]);\r\n\r\n  const renderMessages = () => {\r\n    const messagesList = messages.map((message, index) => (\r\n      <li key={index} className=\"message\">\r\n        <section>\r\n          <p className=\"message__username\">{message.username} </p>\r\n          <p className=\"message__time\"> {message.time}</p>\r\n        </section>\r\n\r\n        <p className=\"message__text\"> {message.text}</p>\r\n      </li>\r\n    ));\r\n\r\n    return messagesList;\r\n  };\r\n\r\n  return (\r\n    <div className=\"messages-bar\">\r\n      <label className=\"messages-bar__header\">Messages</label>\r\n      <div className=\"messages-bar__list-wrapper\">\r\n        <ul\r\n          className=\"messages-bar__list\"\r\n          ref={(el) => {\r\n            setMessagesRef(el);\r\n          }}\r\n        >\r\n          {messages && renderMessages()}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"../Button/Button\";\r\nimport \"./NewMessageBar.scss\";\r\nimport moment from \"moment\";\r\nimport { socket } from \"../../service/socket\";\r\n\r\nexport class NewMessageBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { text: \"\", username: props.username, time: null };\r\n  }\r\n\r\n  sendMessage = () => {\r\n    socket.emit(\"USER_MESSAGE\", {\r\n      username: this.state.username,\r\n      text: this.state.text,\r\n      time: moment().format(\"h:mm:ss\"),\r\n    });\r\n    this.setState({ message: \"\" });\r\n    this.setState({ text: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"new-message-bar\">\r\n        <label className=\"new-message-bar__header\"></label>\r\n\r\n        <form className=\"message__form\" id=\"message__form\">\r\n          <textarea\r\n            id=\"msg\"\r\n            type=\"text\"\r\n            placeholder=\"Enter a message\"\r\n            value={this.state.text}\r\n            name=\"message\"\r\n            autoComplete=\"off\"\r\n            spellCheck=\"false\"\r\n            className=\"message__input \"\r\n            onChange={(event) => {\r\n              this.setState({ text: event.target.value });\r\n            }}\r\n            onKeyDown={(e) => {\r\n              if (e.keyCode === 13 && e.shiftKey === false) {\r\n                e.preventDefault();\r\n                if (this.state.text) {\r\n                  this.sendMessage();\r\n                }\r\n              }\r\n            }}\r\n          />\r\n          <Button\r\n            handleClick={() => {\r\n              if (this.state.text) {\r\n                this.sendMessage();\r\n              }\r\n            }}\r\n            text={\">\"}\r\n            classes={\"send-button\"}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Header } from \"../Header/Header\";\r\nimport panorama from \"../JoinPage/panorama.png\";\r\nimport { SideBar } from \"./SideBar\";\r\nimport { MessagesBar } from \"./MessagesBar\";\r\nimport { NewMessageBar } from \"./NewMessageBar\";\r\nimport \"./ChatPage.scss\";\r\nimport { Link, HashRouter } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { Button } from \"../Button/Button\";\r\nimport ifvisible from \"ifvisible.js\";\r\n\r\nimport { socket } from \"../../service/socket\";\r\n\r\nexport default class ChatPage extends React.Component {\r\n  _isMounted = false;\r\n\r\n  state = {\r\n    connected: false,\r\n    username: \"\",\r\n    messages: [],\r\n    users: [],\r\n    room: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    socket.on(\"SERVER_MESSAGE\", (message) => {\r\n      if (this._isMounted) {\r\n        if (this.state.messages) {\r\n          let newMessages = [...this.state.messages, message];\r\n          this.setState({ messages: newMessages });\r\n        } else {\r\n          this.setState({ messages: [message] });\r\n        }\r\n      }\r\n    });\r\n\r\n    // Get room and users\r\n    socket.on(\"ROOM_USERS\", ({ room, users }) => {\r\n      if (this._isMounted) {\r\n        this.setState({ room, users });\r\n      }\r\n    });\r\n\r\n    socket.on(\"SERVER_REGISTER\", (message) => {\r\n      if (this._isMounted) {\r\n        this.setState({\r\n          username: message.username,\r\n          connected: true,\r\n        });\r\n\r\n        if (this.state.messages) {\r\n          let newMessages = [...this.state.messages, message.botMessage];\r\n          this.setState({ messages: newMessages });\r\n        } else {\r\n          this.setState({\r\n            messages: [message.botMessage],\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    // if (this._isMounted) {\r\n    //   ifvisible.setIdleDuration(120);\r\n    //   ifvisible.on(\"idle\", () => {\r\n    //     // socket.emit(\"disconnect\");\r\n    //     socket.disconnect();\r\n    //     this.setState({ connected: false });\r\n    //   });\r\n    // }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  sendMessage = (msg) => {\r\n    socket.emit(\"USER_MESSAGE\", {\r\n      username: this.state.username,\r\n      text: msg,\r\n      time: moment().format(\"h:mm:ss\"),\r\n    });\r\n    this.setState({ message: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"chat\">\r\n        <div className=\"chat__bg\">\r\n          <img\r\n            alt=\"city\"\r\n            className=\"panorama__image panorama__image--chat\"\r\n            id=\"panoramaImage\"\r\n            src={panorama}\r\n          />\r\n        </div>\r\n        <Header />\r\n        {this.state.connected ? (\r\n          <div className=\"chat__board\">\r\n            <SideBar\r\n              username={this.state.username}\r\n              room={this.state.room}\r\n              users={this.state.users}\r\n            />\r\n            <MessagesBar messages={this.state.messages} />\r\n            <NewMessageBar username={this.state.username} />\r\n          </div>\r\n        ) : (\r\n          <HashRouter basename=\"/\">\r\n            <Link to=\"/\">\r\n              <Button\r\n                text={\"Back\"}\r\n                classes={\"home-button animation-delayed-appear\"}\r\n              />\r\n            </Link>\r\n          </HashRouter>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nclass List extends React.Component {\r\n  // Initialize the state\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n    };\r\n  }\r\n\r\n  // Fetch the list on first mount\r\n  componentDidMount() {\r\n    this.getList();\r\n  }\r\n\r\n  // Retrieves the list of items from the Express app\r\n  getList = () => {\r\n    fetch(\"/api/getList\")\r\n      .then((res) => res.json())\r\n      .then((list) => this.setState({ list }));\r\n  };\r\n\r\n  render() {\r\n    const { list } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>List of Items</h1>\r\n        {/* Check to see if any items are found*/}\r\n        {list.length ? (\r\n          <div>\r\n            {/* Render the list of items */}\r\n            {list.map((item) => {\r\n              return <div>{item}</div>;\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h2>No List Items Found</h2>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport { Route, Switch, HashRouter } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport JoinPage from \"./components/JoinPage/JoinPage\";\r\nimport ChatPage from \"./components/ChatPage/ChatPage\";\r\nimport List from \"./components/List/List\";\r\nimport \"../src/common/styles/index.scss\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    const App = () => (\r\n      <HashRouter basename=\"/\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={JoinPage} />\r\n          <Route exact path=\"/chat\" component={ChatPage} />\r\n          <Route exact path=\"/list\" component={List} />\r\n        </Switch>\r\n      </HashRouter>\r\n    );\r\n\r\n    return (\r\n      <Switch>\r\n        <App />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/panorama.fee7f301.png\";"],"sourceRoot":""}