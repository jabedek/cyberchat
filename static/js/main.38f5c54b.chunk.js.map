{"version":3,"sources":["components/Header/Header.js","components/Button/Button.js","service/socket.js","utils/index.js","components/JoinPage/JoinPage.js","components/ChatPage/SideBar.js","components/ChatPage/Messages.js","components/ChatPage/MessagingBar.js","components/ChatPage/ChatPage.js","components/List/List.js","App.js","index.js","components/JoinPage/panorama.png"],"names":["Header","className","data-text","Button","props","onClick","handleClick","classes","text","socket","io","generateUsername","min","max","prefixes","suffixes","suf","Math","floor","random","length","ceil","JoinPage","name","setState","username","registerUsername","state","toLowerCase","console","log","emit","room","time","moment","format","classAnimate","btnVisibility","display","formVisibility","this","setTimeout","alt","id","src","panorama","onFocus","onSubmit","e","preventDefault","type","spellCheck","maxLength","minLength","required","autoComplete","value","onChange","event","target","style","htmlFor","defaultValue","to","React","Component","SideBar","useState","setUsername","users","setUsers","useEffect","listUsers","map","user","index","key","renderUsers","Messages","messages","setMessages","messagesRef","setMessagesRef","scrollTop","scrollHeight","children","lastMessage","classList","toggle","ref","el","message","isCyberchat","specialColor","displayTime","color","MessagingBar","sendMessage","placeholder","onKeyDown","keyCode","shiftKey","ChatPage","_isMounted","connected","msg","on","newMessages","botMessage","basename","class","List","getList","fetch","then","res","json","list","item","App","exact","path","component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.38f5c54b.chunk.js","sourcesContent":["import \"./Header.scss\";\r\nimport React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <header className=\"header\">\r\n        <h1\r\n          className=\"logo !glitch \"\r\n          data-text=\"\r\nglitch\"\r\n        >\r\n          cyberchat\r\n        </h1>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nconst withHeader = (WrappedComponent) => {\r\n  return class WithHeader extends React.Component {\r\n    render() {\r\n      return (\r\n        <>\r\n          <Header />\r\n          <WrappedComponent {...this.props} />\r\n        </>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport { Header, withHeader };\r\n","import React from \"react\";\r\n\r\nexport const Button = (props) => {\r\n  return (\r\n    <p onClick={props.handleClick} className={props.classes}>\r\n      {props.text}\r\n    </p>\r\n  );\r\n};\r\n","import io from \"socket.io-client\";\r\nconst url = \"https://afternoon-tundra-39737.herokuapp.com/\";\r\n// const url = \"http://localhost:5000/\";\r\n\r\nexport const socket = io(url);\r\n","export const generateUsername = () => {\r\n  const prefixes = [\"unique\", \"rare\"];\r\n  const suffixes = [\"entity\", \"subject\"];\r\n  const suf = suffixes[Math.floor(Math.random() * (suffixes.length - 0)) + 0];\r\n  const pre = prefixes[Math.floor(Math.random() * (prefixes.length - 0)) + 0];\r\n  const name = pre + \"-\" + suf + \"-\" + getRandomInt(100, 999);\r\n  return name;\r\n};\r\n\r\nfunction getRandomInt(min, max) {\r\n  return (\r\n    Math.floor(Math.random() * (Math.floor(max) - Math.ceil(min))) +\r\n    Math.ceil(min)\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Header } from \"../Header/Header\";\r\nimport \"./JoinPage.scss\";\r\nimport panorama from \"./panorama.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"../Button/Button\";\r\nimport moment from \"moment\";\r\nimport { socket } from \"../../service/socket\";\r\nimport { generateUsername } from \"../../utils\";\r\n\r\nexport default class JoinPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      classAnimate: \"animation-appear\",\r\n      btnVisibility: { display: \"none\" },\r\n      formVisibility: \"invisible\",\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({\r\n      username: \"\",\r\n      classAnimate: \"animation-appear\",\r\n      btnVisibility: { display: \"none\" },\r\n      formVisibility: \"invisible\",\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    // socket.on(\"SERVER_WELCOME\", (message) => {\r\n    //   console.log(\"SERVER_WELCOME:\\n\", message);\r\n    // });\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        classAnimate: \"\",\r\n        formVisibility: \"visible\",\r\n      });\r\n\r\n      this.setState({ username: generateUsername() });\r\n    }, 800);\r\n  }\r\n\r\n  handleClick = (name) => {\r\n    this.setState({ username: name });\r\n  };\r\n\r\n  registerUsername = () => {\r\n    let username = this.state.username.toLowerCase();\r\n    console.log((\">>>\", username));\r\n\r\n    if (username !== \"cyberchat\") {\r\n      socket.emit(\"USER_JOIN\", {\r\n        username: this.state.username,\r\n        room: \"Main\",\r\n        time: moment().format(\"h:mm:ss\"),\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"Join !glitch \"\r\n          data-text=\"\r\n  glitch\"\r\n        >\r\n          <div className=\"join-bg\">\r\n            <div className=\"panorama animation-bg-opacity\">\r\n              <img\r\n                alt=\"city\"\r\n                className=\"panorama__image\"\r\n                id=\"panoramaImage\"\r\n                src={panorama}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <Header />\r\n\r\n          <form\r\n            className={`join-form ${this.state.classAnimate} ${this.state.formVisibility}`}\r\n            id=\"joinForm\"\r\n            onFocus={() => {\r\n              this.setState({\r\n                btnVisibility: { display: \"flex\" },\r\n              });\r\n            }}\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              this.registerUsername();\r\n            }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              id=\"usernameInput\"\r\n              name=\"username\"\r\n              className=\"join-form__input \"\r\n              spellCheck=\"false\"\r\n              maxLength=\"25\"\r\n              minLength=\"1\"\r\n              required\r\n              autoComplete=\"off\"\r\n              value={this.state.username}\r\n              onChange={(event) => {\r\n                this.setState({ username: event.target.value });\r\n              }}\r\n            />\r\n            <p className=\"join-form__hint\" id=\"joinFormHint\">\r\n              <span id=\"usernameLength\">{this.state.username.length}</span> / 25\r\n            </p>\r\n            <div className=\"form-control\" style={{ display: \"none \" }}>\r\n              <label htmlFor=\"room\">Room</label>\r\n              <select name=\"room\" id=\"room\">\r\n                <option defaultValue=\"Ogólne\">Ogólne</option>\r\n                <option value=\"Memesy\">Memesy</option>\r\n                <option value=\"Nowy\" id=\"newRoom\">\r\n                  nowy\r\n                </option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"button-wrapper\" style={this.state.btnVisibility}>\r\n              <Link to=\"chat\">\r\n                <Button\r\n                  handleClick={this.registerUsername}\r\n                  text={\"Go\"}\r\n                  classes={\"join-button\"}\r\n                />\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import \"./SideBar.scss\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { socket } from \"../../service/socket\";\r\n\r\nexport const SideBar = (props) => {\r\n  const [username, setUsername] = useState(\"Elo\");\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setUsername(props.username);\r\n    setUsers(props.users);\r\n  }, [props.username, props.users]);\r\n\r\n  const renderUsers = () => {\r\n    if (users) {\r\n      const listUsers = users.map((user, index) => {\r\n        if (user.id !== socket.id)\r\n          return (\r\n            <li className=\"userElement\" key={index}>\r\n              {user.username}\r\n            </li>\r\n          );\r\n      });\r\n      return <ul className=\"users__list\">{listUsers}</ul>;\r\n    }\r\n\r\n    return <p className=\"users__list\">{users.length}</p>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"SideBar\">\r\n      <label className=\"SideBar__header\">Status</label>\r\n\r\n      <section className=\"user\">\r\n        <div className=\"user__wrapper\">\r\n          <i className=\"icon eye\"></i>\r\n          You:\r\n          <p className=\"user__name\">{username}</p>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"users\">\r\n        <span className=\"my-icon\">\r\n          <i className=\"icon cube\"></i>\r\n        </span>\r\n        Other users:\r\n        {renderUsers()}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Messages.scss\";\r\nimport { socket } from \"../../service/socket\";\r\n\r\nexport const Messages = (props) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [messagesRef, setMessagesRef] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (messagesRef) {\r\n      messagesRef.scrollTop = messagesRef.scrollHeight;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    setMessages(props.messages);\r\n  }, [props.messages]);\r\n\r\n  useEffect(() => {\r\n    if (messagesRef && messagesRef.children.length) {\r\n      const lastMessage = messagesRef.children[messagesRef.children.length - 1];\r\n\r\n      lastMessage.classList.toggle(\"animation-new-message\");\r\n\r\n      setTimeout(() => {\r\n        lastMessage.classList.toggle(\"animation-new-message\");\r\n      }, 550);\r\n    }\r\n  }, [messages]);\r\n\r\n  const renderMessages = () => {\r\n    /* Set styling for displaying messages depending on their source \r\n      - other users are white-ish\r\n      - cyberchat is green-ish\r\n      - current user is blue-ish\r\n      ALSO don't display hours because messages from server (Cyberchat) deployed on Heroku will show different local time\r\n    */\r\n\r\n    const messagesList = messages.map((message, index) => {\r\n      let isCyberchat = message.username === \"Cyberchat\" ? true : false;\r\n      let isCurrentUser = message.id === socket.id ? true : false;\r\n\r\n      let specialColor = \"rgb(245, 225, 245)\";\r\n      if (isCyberchat) specialColor = \"rgb(160, 250, 160)\";\r\n      if (isCurrentUser) specialColor = \"rgb(5, 150, 250)\";\r\n\r\n      const displayTime = !isCyberchat ? message.time : \"\";\r\n\r\n      return (\r\n        <li key={index} className=\"message\">\r\n          <section>\r\n            <p\r\n              className=\"message__username\"\r\n              style={{\r\n                color: specialColor,\r\n              }}\r\n            >\r\n              {message.username}\r\n            </p>\r\n            <p className=\"message__time\"> {displayTime}</p>\r\n          </section>\r\n\r\n          <p className=\"message__text\"> {message.text}</p>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return messagesList;\r\n  };\r\n\r\n  return (\r\n    <div className=\"Messages\">\r\n      <div className=\"Messages__list-container\">\r\n        <ul\r\n          className=\"Messages__list\"\r\n          ref={(el) => {\r\n            setMessagesRef(el); // Ref used for scrolling to last message\r\n          }}\r\n        >\r\n          {messages && renderMessages()}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"../Button/Button\";\r\nimport \"./MessagingBar.scss\";\r\nimport moment from \"moment\";\r\nimport { socket } from \"../../service/socket\";\r\n\r\nexport class MessagingBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { text: \"\", username: props.username, time: null };\r\n  }\r\n\r\n  sendMessage = () => {\r\n    socket.emit(\"USER_MESSAGE\", {\r\n      username: this.state.username,\r\n      text: this.state.text,\r\n      time: moment().format(\"h:mm:ss\"),\r\n      id: socket.id,\r\n    });\r\n    this.setState({ message: \"\" });\r\n    this.setState({ text: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"MessagingBar\">\r\n        <form className=\"MessagingBar__form\" id=\"message__form\">\r\n          <textarea\r\n            id=\"msg\"\r\n            type=\"text\"\r\n            placeholder=\"Enter a message\"\r\n            value={this.state.text}\r\n            name=\"message\"\r\n            autoComplete=\"off\"\r\n            spellCheck=\"false\"\r\n            className=\"MessagingBar__input \"\r\n            onChange={(event) => {\r\n              this.setState({ text: event.target.value });\r\n            }}\r\n            onKeyDown={(e) => {\r\n              if (e.keyCode === 13 && e.shiftKey === false) {\r\n                e.preventDefault();\r\n                if (this.state.text) {\r\n                  this.sendMessage();\r\n                }\r\n              }\r\n            }}\r\n          />\r\n          <Button\r\n            handleClick={() => {\r\n              if (this.state.text) {\r\n                this.sendMessage();\r\n              }\r\n            }}\r\n            text={\">\"}\r\n            classes={\"MessagingBar__button\"}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Header } from \"../Header/Header\";\r\nimport panorama from \"../JoinPage/panorama.png\";\r\nimport { SideBar } from \"./SideBar\";\r\nimport { Messages } from \"./Messages\";\r\nimport { MessagingBar } from \"./MessagingBar\";\r\nimport \"./ChatPage.scss\";\r\nimport { Link, HashRouter } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { Button } from \"../Button/Button\";\r\n// import ifvisible from \"ifvisible.js\";\r\n\r\nimport { socket } from \"../../service/socket\";\r\n\r\nexport default class ChatPage extends React.Component {\r\n  _isMounted = false;\r\n\r\n  state = {\r\n    connected: false,\r\n    username: \"\",\r\n    id: \"\",\r\n    messages: [],\r\n    users: [],\r\n    room: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    socket.on(\"SERVER_MESSAGE\", (message) => {\r\n      console.log(message);\r\n      if (this._isMounted) {\r\n        if (this.state.messages) {\r\n          let newMessages = [...this.state.messages, message];\r\n          this.setState({ messages: newMessages });\r\n        } else {\r\n          this.setState({ messages: [message] });\r\n        }\r\n      }\r\n    });\r\n\r\n    // Get room and users\r\n    socket.on(\"ROOM_USERS\", ({ room, users }) => {\r\n      if (this._isMounted) {\r\n        this.setState({ room, users });\r\n      }\r\n    });\r\n\r\n    socket.on(\"SERVER_REGISTER\", (message) => {\r\n      console.log(message);\r\n\r\n      if (this._isMounted) {\r\n        this.setState({\r\n          username: message.username,\r\n          id: message.id,\r\n          connected: true,\r\n        });\r\n\r\n        if (this.state.messages) {\r\n          let newMessages = [...this.state.messages, message.botMessage];\r\n          this.setState({ messages: newMessages });\r\n        } else {\r\n          this.setState({\r\n            messages: [message.botMessage],\r\n          });\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  sendMessage = (msg) => {\r\n    socket.emit(\"USER_MESSAGE\", {\r\n      username: this.state.username,\r\n      text: msg,\r\n      time: moment().format(\"h:mm:ss\"),\r\n    });\r\n    this.setState({ message: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"chat\">\r\n        <div className=\"chat__bg\">\r\n          <img\r\n            alt=\"city\"\r\n            className=\"panorama__image panorama__image--chat\"\r\n            id=\"panoramaImage\"\r\n            src={panorama}\r\n          />\r\n        </div>\r\n        <Header />\r\n\r\n        {this.state.connected ? (\r\n          <div className=\"chat__board\">\r\n            {/* <Button\r\n              text={\"Users\"}\r\n              classes={\"users-list-button animation-delayed-appear\"}\r\n            /> */}\r\n            <SideBar\r\n              username={this.state.username}\r\n              room={this.state.room}\r\n              users={this.state.users}\r\n            />\r\n            <Messages messages={this.state.messages} />\r\n            <MessagingBar username={this.state.username} />\r\n          </div>\r\n        ) : (\r\n          <HashRouter basename=\"/\">\r\n            <p class=\"joining-message\">Joining...</p>\r\n            <Link to=\"/\">\r\n              <Button\r\n                text={\"Back\"}\r\n                classes={\"home-button animation-delayed-appear\"}\r\n              />\r\n            </Link>\r\n          </HashRouter>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nclass List extends React.Component {\r\n  // Initialize the state\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n    };\r\n  }\r\n\r\n  // Fetch the list on first mount\r\n  componentDidMount() {\r\n    this.getList();\r\n  }\r\n\r\n  // Retrieves the list of items from the Express app\r\n  getList = () => {\r\n    fetch(\"/api/getList\")\r\n      .then((res) => res.json())\r\n      .then((list) => this.setState({ list }));\r\n  };\r\n\r\n  render() {\r\n    const { list } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>List of Items</h1>\r\n        {/* Check to see if any items are found*/}\r\n        {list.length ? (\r\n          <div>\r\n            {/* Render the list of items */}\r\n            {list.map((item) => {\r\n              return <div>{item}</div>;\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h2>No List Items Found</h2>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport { Route, Switch, HashRouter } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport JoinPage from \"./components/JoinPage/JoinPage\";\r\nimport ChatPage from \"./components/ChatPage/ChatPage\";\r\nimport List from \"./components/List/List\";\r\nimport \"../src/common/styles/index.scss\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    const App = () => (\r\n      <HashRouter basename=\"/\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={JoinPage} />\r\n          <Route exact path=\"/chat\" component={ChatPage} />\r\n          <Route exact path=\"/list\" component={List} />\r\n        </Switch>\r\n      </HashRouter>\r\n    );\r\n\r\n    return (\r\n      <Switch>\r\n        <App />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/panorama.fee7f301.png\";"],"sourceRoot":""}