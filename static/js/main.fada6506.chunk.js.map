{"version":3,"sources":["components/Header/Header.js","components/Button/Button.js","service/socket.js","components/JoinPage/JoinPage.js","components/ChatPage/SideBar.js","components/ChatPage/MessagesBar.js","components/ChatPage/NewMessageBar.js","components/ChatPage/ChatPage.js","components/List/List.js","App.js","index.js","components/JoinPage/panorama.png"],"names":["Header","className","data-text","Button","props","onClick","handleClick","classes","text","socket","io","JoinPage","generateUsername","prefixes","suffixes","suf","Math","floor","random","length","name","setState","username","registerUsername","emit","state","room","time","moment","format","classAnimate","btnVisibility","display","formVisibility","height","border","width","on","message","console","log","setTimeout","alt","id","src","panorama","this","style","onFocus","onSubmit","e","preventDefault","type","spellCheck","maxLength","minLength","required","autoComplete","value","onChange","event","target","htmlFor","defaultValue","to","React","Component","SideBar","useState","setUsername","setRoom","users","setUsers","useEffect","listUsers","map","user","index","key","renderUsers","MessagesBar","messages","setMessages","messagesRef","setMessagesRef","scrollTop","scrollHeight","children","lastMessage","classList","toggle","ref","el","NewMessageBar","sendMessage","placeholder","onKeyDown","keyCode","shiftKey","ChatPage","_isMounted","connected","msg","newMessages","botMessage","ifvisible","disconnect","List","getList","fetch","then","res","json","list","item","App","basename","exact","path","component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.fada6506.chunk.js","sourcesContent":["import \"./Header.scss\";\r\nimport React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <header className=\"header\">\r\n        <h1\r\n          className=\"logo !glitch \"\r\n          data-text=\"\r\nglitch\"\r\n        >\r\n          cyberchat\r\n        </h1>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nconst withHeader = (WrappedComponent) => {\r\n  return class WithHeader extends React.Component {\r\n    render() {\r\n      return (\r\n        <>\r\n          <Header />\r\n          <WrappedComponent {...this.props} />\r\n        </>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport { Header, withHeader };\r\n","import React from \"react\";\r\n\r\nexport const Button = (props) => {\r\n  return (\r\n    <p onClick={props.handleClick} className={props.classes}>\r\n      {props.text}\r\n    </p>\r\n  );\r\n};\r\n","import io from \"socket.io-client\";\r\n// const url = \"https://afternoon-tundra-39737.herokuapp.com/\";\r\nconst url = \"http://localhost:5000/\";\r\n\r\nexport const socket = io(url);\r\n","import React from \"react\";\r\nimport { Header } from \"../Header/Header\";\r\nimport \"./JoinPage.scss\";\r\nimport panorama from \"./panorama.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"../Button/Button\";\r\nimport moment from \"moment\";\r\nimport { socket } from \"../../service/socket\";\r\n\r\nexport default class JoinPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      classAnimate: \"animation-appear\",\r\n      btnVisibility: { display: \"none\" },\r\n      formVisibility: {\r\n        height: \"0\",\r\n        border: \"none\",\r\n        width: \"0\",\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    socket.on(\"SERVER_WELCOME\", (message) => {\r\n      console.log(\"SERVER_WELCOME:\\n\", message);\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        classAnimate: \"\",\r\n        formVisibility: {\r\n          height: \"12vh\",\r\n          width: \"40vw\",\r\n          border: \"0.14rem solid rgba(255, 255, 0, 0.6)\",\r\n        },\r\n      });\r\n      this.generateUsername();\r\n    }, 800);\r\n  }\r\n\r\n  generateUsername = () => {\r\n    const prefixes = [\"unique\", \"rare\", \"exceptional\"];\r\n    const suffixes = [\"entity\", \"individual\", \"subject\", \"one\"];\r\n    const suf = suffixes[Math.floor(Math.random() * (suffixes.length - 0)) + 0];\r\n    const pre = prefixes[Math.floor(Math.random() * (prefixes.length - 0)) + 0];\r\n    const name = pre + \"-\" + suf;\r\n\r\n    this.setState({ username: name });\r\n  };\r\n\r\n  handleClick = (name) => {\r\n    this.setState({ username: name });\r\n  };\r\n\r\n  registerUsername = () => {\r\n    socket.emit(\"USER_JOIN\", {\r\n      username: this.state.username,\r\n      room: \"Main\",\r\n      time: moment().format(\"h:mm:ss\"),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"Join !glitch \"\r\n          data-text=\"\r\n  glitch\"\r\n        >\r\n          <div className=\"join-bg\">\r\n            <div className=\"panorama animation-bg-opacity\">\r\n              <img\r\n                alt=\"city\"\r\n                className=\"panorama__image\"\r\n                id=\"panoramaImage\"\r\n                src={panorama}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <Header />\r\n\r\n          <form\r\n            className={`join-form ${this.state.classAnimate}`}\r\n            id=\"joinForm\"\r\n            style={this.state.formVisibility}\r\n            onFocus={() => {\r\n              this.setState({\r\n                btnVisibility: { display: \"flex\" },\r\n              });\r\n            }}\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              this.registerUsername();\r\n            }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              id=\"usernameInput\"\r\n              name=\"username\"\r\n              className=\"join-form__input \"\r\n              spellCheck=\"false\"\r\n              maxLength=\"25\"\r\n              minLength=\"1\"\r\n              required\r\n              autoComplete=\"off\"\r\n              value={this.state.username}\r\n              onChange={(event) => {\r\n                this.setState({ username: event.target.value });\r\n              }}\r\n            />\r\n            <p className=\"join-form__hint\" id=\"joinFormHint\">\r\n              <span id=\"usernameLength\">{this.state.username.length}</span> / 25\r\n            </p>\r\n            <div className=\"form-control\" style={{ display: \"none \" }}>\r\n              <label htmlFor=\"room\">Room</label>\r\n              <select name=\"room\" id=\"room\">\r\n                <option defaultValue=\"Ogólne\">Ogólne</option>\r\n                <option value=\"Memesy\">Memesy</option>\r\n                <option value=\"Nowy\" id=\"newRoom\">\r\n                  nowy\r\n                </option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"button-wrapper\" style={this.state.btnVisibility}>\r\n              <Link to=\"chat\">\r\n                <Button\r\n                  handleClick={this.registerUsername}\r\n                  text={\"Go\"}\r\n                  classes={\"join-button\"}\r\n                />\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import \"./SideBar.scss\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nexport const SideBar = (props) => {\r\n  const [username, setUsername] = useState(\"Elo\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setUsername(props.username);\r\n    setRoom(props.room);\r\n    setUsers(props.users);\r\n  }, [props.username, props.room, props.users]);\r\n\r\n  const renderUsers = () => {\r\n    if (users) {\r\n      const listUsers = users.map((user, index) => (\r\n        <li key={index}>{user.username}</li>\r\n      ));\r\n      return <ul className=\"sidebar__value\">{listUsers}</ul>;\r\n    }\r\n\r\n    return <p className=\"sidebar__value\">{users.length}</p>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <label className=\"sidebar__header\">Status</label>\r\n\r\n      <ul className=\"sidebar__list\">\r\n        <li className=\"sidebar__item\">\r\n          <i className=\"cube icon\"></i>\r\n          Room:\r\n          <p className=\"sidebar__value\">{room}</p>\r\n        </li>\r\n\r\n        <li className=\"sidebar__item\">\r\n          <i className=\" eye icon\"></i>\r\n          You:\r\n          <p className=\"sidebar__value\">{username}</p>\r\n        </li>\r\n\r\n        <li className=\"sidebar__item\">\r\n          <i className=\" users icon\"></i>\r\n          Users:\r\n          {renderUsers()}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./MessagesBar.scss\";\r\n\r\nexport const MessagesBar = (props) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [messagesRef, setMessagesRef] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (messagesRef) {\r\n      messagesRef.scrollTop = messagesRef.scrollHeight;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    setMessages(props.messages);\r\n  }, [props.messages]);\r\n\r\n  useEffect(() => {\r\n    if (messagesRef && messagesRef.children.length) {\r\n      const lastMessage = messagesRef.children[messagesRef.children.length - 1];\r\n\r\n      lastMessage.classList.toggle(\"animation-new-message\");\r\n\r\n      setTimeout(() => {\r\n        lastMessage.classList.toggle(\"animation-new-message\");\r\n      }, 550);\r\n    }\r\n  }, [messages]);\r\n\r\n  const renderMessages = () => {\r\n    const messagesList = messages.map((message, index) => (\r\n      <li key={index} className=\"message\">\r\n        <p className=\"message__username\">\r\n          {message.username}\r\n          <span className=\"message__time\"> {message.time}</span>\r\n        </p>\r\n        <p className=\"message__text\"> {message.text}</p>\r\n      </li>\r\n    ));\r\n\r\n    return messagesList;\r\n  };\r\n\r\n  return (\r\n    <div className=\"messages-bar\">\r\n      <label className=\"messages-bar__header\">Messages</label>\r\n      <div className=\"messages-bar__list-wrapper\">\r\n        <ul\r\n          className=\"messages-bar__list\"\r\n          ref={(el) => {\r\n            setMessagesRef(el);\r\n          }}\r\n        >\r\n          {messages && renderMessages()}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"../Button/Button\";\r\nimport \"./NewMessageBar.scss\";\r\nimport moment from \"moment\";\r\nimport { socket } from \"../../service/socket\";\r\n\r\nexport class NewMessageBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { text: \"\", username: props.username, time: null };\r\n  }\r\n\r\n  sendMessage = () => {\r\n    socket.emit(\"USER_MESSAGE\", {\r\n      username: this.state.username,\r\n      text: this.state.text,\r\n      time: moment().format(\"h:mm:ss\"),\r\n    });\r\n    this.setState({ message: \"\" });\r\n    this.setState({ text: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"new-message-bar\">\r\n        <label className=\"new-message-bar__header\"></label>\r\n\r\n        <form className=\"message__form\" id=\"message__form\">\r\n          <textarea\r\n            id=\"msg\"\r\n            type=\"text\"\r\n            placeholder=\"Enter a message\"\r\n            value={this.state.text}\r\n            name=\"message\"\r\n            autoComplete=\"off\"\r\n            spellCheck=\"false\"\r\n            className=\"message__input \"\r\n            onChange={(event) => {\r\n              this.setState({ text: event.target.value });\r\n            }}\r\n            onKeyDown={(e) => {\r\n              if (e.keyCode === 13 && e.shiftKey === false) {\r\n                e.preventDefault();\r\n                if (this.state.text) {\r\n                  this.sendMessage();\r\n                }\r\n              }\r\n            }}\r\n          />\r\n          <Button\r\n            handleClick={() => {\r\n              if (this.state.text) {\r\n                this.sendMessage();\r\n              }\r\n            }}\r\n            text={\">\"}\r\n            classes={\"send-button\"}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Header } from \"../Header/Header\";\r\nimport panorama from \"../JoinPage/panorama.png\";\r\nimport { SideBar } from \"./SideBar\";\r\nimport { MessagesBar } from \"./MessagesBar\";\r\nimport { NewMessageBar } from \"./NewMessageBar\";\r\nimport \"./ChatPage.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { Button } from \"../Button/Button\";\r\n\r\nimport ifvisible from \"ifvisible.js\";\r\nimport { socket } from \"../../service/socket\";\r\n\r\nexport default class ChatPage extends React.Component {\r\n  _isMounted = false;\r\n\r\n  state = {\r\n    connected: false,\r\n    username: \"\",\r\n    messages: [],\r\n    users: [],\r\n    room: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    socket.on(\"SERVER_MESSAGE\", (message) => {\r\n      if (this._isMounted) {\r\n        if (this.state.messages) {\r\n          let newMessages = [...this.state.messages, message];\r\n          this.setState({ messages: newMessages });\r\n        } else {\r\n          this.setState({ messages: [message] });\r\n        }\r\n      }\r\n    });\r\n\r\n    // Get room and users\r\n    socket.on(\"ROOM_USERS\", ({ room, users }) => {\r\n      if (this._isMounted) {\r\n        this.setState({ room, users });\r\n      }\r\n    });\r\n\r\n    socket.on(\"SERVER_REGISTER\", (message) => {\r\n      if (this._isMounted) {\r\n        this.setState({\r\n          username: message.username,\r\n          connected: true,\r\n        });\r\n\r\n        if (this.state.messages) {\r\n          let newMessages = [...this.state.messages, message.botMessage];\r\n          this.setState({ messages: newMessages });\r\n        } else {\r\n          this.setState({\r\n            messages: [message.botMessage],\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    console.log(\"ifvisible\", ifvisible);\r\n    if (this._isMounted) {\r\n      ifvisible.on(\"blur\", function () {\r\n        // example code here..\r\n        // document.getElementById(\"test\").style.backgroundColor = \"red\";\r\n        // animations.pause();\r\n        console.log(\"ifvisible blur\");\r\n        socket.disconnect();\r\n        this.setState({ connected: false });\r\n        // socket.disconnect();\r\n      });\r\n\r\n      ifvisible.on(\"idle\", function () {\r\n        // Stop auto updating the live data\r\n        // stream.pause();\r\n        // ifvisible.setIdleDuration(10); // Page will become idle after 120 seconds\r\n        // socket.emit('disconnect')\r\n      });\r\n    }\r\n    // ifvisible.on(\"focus\", function () {\r\n    //   // resume all animations\r\n    //   // animations.resume();\r\n    //   console.log(\"ifvisible focus\");\r\n    // });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  sendMessage = (msg) => {\r\n    socket.emit(\"USER_MESSAGE\", {\r\n      username: this.state.username,\r\n      text: msg,\r\n      time: moment().format(\"h:mm:ss\"),\r\n    });\r\n    this.setState({ message: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"chat\">\r\n        <div className=\"chat__bg\">\r\n          <img\r\n            alt=\"city\"\r\n            className=\"panorama__image panorama__image--chat\"\r\n            id=\"panoramaImage\"\r\n            src={panorama}\r\n          />\r\n        </div>\r\n        <Header />\r\n        {this.state.connected ? (\r\n          <div\r\n            className=\"chat__board\"\r\n            onClick={() => {\r\n              // socket.disconnect();\r\n              // this.setState({ connected: false });\r\n            }}\r\n          >\r\n            {/* <p id=\"test\">ddd</p> */}\r\n            <SideBar\r\n              username={this.state.username}\r\n              room={this.state.room}\r\n              users={this.state.users}\r\n            />\r\n            <MessagesBar messages={this.state.messages} />\r\n            <NewMessageBar username={this.state.username} />\r\n          </div>\r\n        ) : (\r\n          <Link to=\"/\">\r\n            <Button\r\n              text={\"Back\"}\r\n              classes={\"home-button animation-delayed-appear\"}\r\n            />\r\n          </Link>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nclass List extends React.Component {\r\n  // Initialize the state\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n    };\r\n  }\r\n\r\n  // Fetch the list on first mount\r\n  componentDidMount() {\r\n    this.getList();\r\n  }\r\n\r\n  // Retrieves the list of items from the Express app\r\n  getList = () => {\r\n    fetch(\"/api/getList\")\r\n      .then((res) => res.json())\r\n      .then((list) => this.setState({ list }));\r\n  };\r\n\r\n  render() {\r\n    const { list } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>List of Items</h1>\r\n        {/* Check to see if any items are found*/}\r\n        {list.length ? (\r\n          <div>\r\n            {/* Render the list of items */}\r\n            {list.map((item) => {\r\n              return <div>{item}</div>;\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h2>No List Items Found</h2>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport { Route, Switch, HashRouter } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport JoinPage from \"./components/JoinPage/JoinPage\";\r\nimport ChatPage from \"./components/ChatPage/ChatPage\";\r\nimport List from \"./components/List/List\";\r\nimport \"../src/common/styles/index.scss\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    const App = () => (\r\n      <HashRouter basename=\"/\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={JoinPage} />\r\n          <Route exact path=\"/chat\" component={ChatPage} />\r\n          <Route exact path=\"/list\" component={List} />\r\n        </Switch>\r\n      </HashRouter>\r\n    );\r\n\r\n    return (\r\n      <Switch>\r\n        <App />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/panorama.fee7f301.png\";"],"sourceRoot":""}