{"version":3,"sources":["components/Header/Header.js","components/Button/Button.js","service/socket.js","components/JoinPage/JoinPage.js","components/ChatPage/SideBar.js","components/ChatPage/MessagesBar.js","components/ChatPage/NewMessageBar.js","components/ChatPage/ChatPage.js","components/List/List.js","App.js","index.js","components/JoinPage/panorama.png"],"names":["Header","className","data-text","Button","props","onClick","handleClick","classes","text","socket","io","JoinPage","generateUsername","prefixes","suffixes","suf","Math","floor","random","length","name","setState","username","registerUsername","emit","state","room","classAnimate","btnVisibility","display","formVisibility","height","border","width","on","message","console","log","setTimeout","alt","id","src","panorama","this","style","onFocus","onSubmit","e","preventDefault","type","spellCheck","maxLength","minLength","required","autoComplete","value","onChange","event","target","htmlFor","defaultValue","to","React","Component","SideBar","useState","setUsername","setRoom","users","setUsers","useEffect","listUsers","map","user","index","key","renderUsers","MessagesBar","messages","setMessages","listMessages","time","renderMessages","NewMessageBar","sendMessage","moment","format","placeholder","onKeyDown","keyCode","shiftKey","ChatPage","_isMounted","connected","msg","newMessages","botMessage","List","getList","fetch","then","res","json","list","item","App","exact","path","process","component","ReactDOM","render","basename","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5a5749bb.chunk.js","sourcesContent":["import \"./Header.scss\";\r\nimport React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <header className=\"header\">\r\n        <h1\r\n          className=\"logo !glitch \"\r\n          data-text=\"\r\nglitch\"\r\n        >\r\n          cyberchat\r\n        </h1>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nconst withHeader = (WrappedComponent) => {\r\n  return class WithHeader extends React.Component {\r\n    render() {\r\n      return (\r\n        <>\r\n          <Header />\r\n          <WrappedComponent {...this.props} />\r\n        </>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport { Header, withHeader };\r\n","import React from \"react\";\r\n\r\nexport const Button = (props) => {\r\n  return (\r\n    <p onClick={props.handleClick} className={props.classes}>\r\n      {props.text}\r\n    </p>\r\n  );\r\n};\r\n","import io from \"socket.io-client\";\r\nconst url = \"https://afternoon-tundra-39737.herokuapp.com/\";\r\n\r\nexport const socket = io(url);\r\n","import React from \"react\";\r\nimport { Header } from \"../Header/Header\";\r\nimport \"./JoinPage.scss\";\r\nimport panorama from \"./panorama.png\";\r\nimport \"./JoinForm.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"../Button/Button\";\r\nimport { socket } from \"../../service/socket\";\r\n\r\nexport default class JoinPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      classAnimate: \"animation-appear\",\r\n      btnVisibility: { display: \"none\" },\r\n      formVisibility: {\r\n        height: \"0\",\r\n        border: \"none\",\r\n        width: \"0\",\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    socket.on(\"SERVER_WELCOME\", (message) => {\r\n      console.log(\"SERVER_WELCOME:\\n\", message);\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        classAnimate: \"\",\r\n        formVisibility: {\r\n          height: \"12vh\",\r\n          width: \"40vw\",\r\n          border: \"0.14rem solid rgba(255, 255, 0, 0.6)\",\r\n        },\r\n      });\r\n      this.generateUsername();\r\n    }, 800);\r\n  }\r\n\r\n  generateUsername = () => {\r\n    const prefixes = [\"unique\", \"rare\", \"exceptional\"];\r\n    const suffixes = [\"entity\", \"individual\", \"subject\", \"one\"];\r\n    const suf = suffixes[Math.floor(Math.random() * (suffixes.length - 0)) + 0];\r\n    const pre = prefixes[Math.floor(Math.random() * (prefixes.length - 0)) + 0];\r\n    const name = pre + \"-\" + suf;\r\n\r\n    this.setState({ username: name });\r\n  };\r\n\r\n  handleClick = (name) => {\r\n    this.setState({ username: name });\r\n  };\r\n\r\n  registerUsername = () => {\r\n    socket.emit(\"USER_JOIN\", {\r\n      username: this.state.username,\r\n      room: \"Main\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"Join !glitch \"\r\n          data-text=\"\r\n  glitch\"\r\n        >\r\n          <div className=\"join-bg\">\r\n            <div className=\"panorama animation-bg-opacity\">\r\n              <img\r\n                alt=\"city\"\r\n                className=\"panorama__image\"\r\n                id=\"panoramaImage\"\r\n                src={panorama}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <Header />\r\n\r\n          <form\r\n            className={`join-form ${this.state.classAnimate}`}\r\n            id=\"joinForm\"\r\n            style={this.state.formVisibility}\r\n            onFocus={() => {\r\n              this.setState({\r\n                btnVisibility: { display: \"flex\" },\r\n              });\r\n            }}\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              this.registerUsername();\r\n            }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              id=\"usernameInput\"\r\n              name=\"username\"\r\n              className=\"join-form__input \"\r\n              spellCheck=\"false\"\r\n              maxLength=\"25\"\r\n              minLength=\"1\"\r\n              required\r\n              autoComplete=\"off\"\r\n              value={this.state.username}\r\n              onChange={(event) => {\r\n                this.setState({ username: event.target.value });\r\n              }}\r\n            />\r\n            <p className=\"join-form__hint\" id=\"joinFormHint\">\r\n              <span id=\"usernameLength\">{this.state.username.length}</span> / 25\r\n            </p>\r\n            <div className=\"form-control\" style={{ display: \"none \" }}>\r\n              <label htmlFor=\"room\">Room</label>\r\n              <select name=\"room\" id=\"room\">\r\n                <option defaultValue=\"Ogólne\">Ogólne</option>\r\n                <option value=\"Memesy\">Memesy</option>\r\n                <option value=\"Nowy\" id=\"newRoom\">\r\n                  nowy\r\n                </option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"button-wrapper\" style={this.state.btnVisibility}>\r\n              <Link to=\"chat\">\r\n                <Button\r\n                  handleClick={this.registerUsername}\r\n                  text={\"Go\"}\r\n                  classes={\"join-button\"}\r\n                />\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import \"./SideBar.scss\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nexport const SideBar = (props) => {\r\n  const [username, setUsername] = useState(\"Elo\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"[@SideBar]\", props.username);\r\n\r\n    setUsername(props.username);\r\n    setRoom(props.room);\r\n    setUsers(props.users);\r\n  }, [props.username, props.username, props.users]);\r\n\r\n  const renderUsers = () => {\r\n    if (users) {\r\n      const listUsers = users.map((user, index) => (\r\n        <li key={index}>{user.username}</li>\r\n      ));\r\n      return <ul className=\"sidebar__value\">{listUsers}</ul>;\r\n    }\r\n\r\n    return <p className=\"sidebar__value\">{users.length}</p>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <label className=\"sidebar__header\">Status</label>\r\n\r\n      <ul className=\"sidebar__list\">\r\n        <li className=\"sidebar__item\">\r\n          <i className=\"cube icon\"></i>\r\n          Room:\r\n          <p className=\"sidebar__value\">{room}</p>\r\n        </li>\r\n\r\n        <li className=\"sidebar__item\">\r\n          <i className=\" eye icon\"></i>\r\n          You:\r\n          <p className=\"sidebar__value\">{username}</p>\r\n        </li>\r\n\r\n        <li className=\"sidebar__item\">\r\n          <i className=\" users icon\"></i>\r\n          Users:\r\n          {renderUsers()}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./MessagesBar.scss\";\r\nimport { socket } from \"../../service/socket\";\r\nconst messagesTest = [\r\n  { time: \"17:05\", text: \"Hello world!\", username: \"xyz\" },\r\n  { time: \"13:45\", text: \"Równo\", username: \"Jeż\" },\r\n];\r\nexport const MessagesBar = (props) => {\r\n  const [messages, setMessages] = useState([]);\r\n  useEffect(() => {\r\n    setMessages(props.messages);\r\n    // console.log(\">>>MB\", props.messages);\r\n\r\n    // socket.on(\"SERVER_MESSAGE\", (message) => {\r\n    //   if (messages) {\r\n    //     let newMessages = [...messages, message];\r\n    //     console.log(\">>>\", newMessages);\r\n    //     setMessages(newMessages);\r\n\r\n    //     // console.log(\"\");\r\n    //     // setMessages({ ...messages, message });\r\n    //   }\r\n    // });\r\n  }, [props.messages]);\r\n\r\n  // socket.on(\"USER_MESSAGE\", (message) => {\r\n  //   console.log(\"[@ChatPage] USER_MESSAGE:\\n\", message);\r\n  // });\r\n  // socket.on(\"SERVER_MESSAGE\", (message) => {\r\n  //   console.log(\"[@ChatPage] SERVER_MESSAGE:\\n\", message);\r\n  // });\r\n\r\n  // socket.on(\"SERVER_REGISTER_MESSAGE\", (message) => {\r\n  //   this.setState({ username: message.username, connected: true });\r\n\r\n  //   console.log(\"[@ChatPage] SERVER_REGISTER_MESSAGE:\\n\", message);\r\n  // });\r\n\r\n  const renderMessages = () => {\r\n    const listMessages = messages.map((message, index) => (\r\n      <li key={index} className=\"message\">\r\n        <p className=\"message__username\">\r\n          {message.username}\r\n          <span className=\"message__time\"> {message.time}</span>\r\n        </p>\r\n        <p className=\"message__text\"> {message.text}</p>\r\n      </li>\r\n    ));\r\n\r\n    return <ul className=\"messages-bar__list\">{listMessages}</ul>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"messages-bar\">\r\n      <label className=\"messages-bar__header\">Messages</label>\r\n      <div className=\"messages-bar__list-wrapper\">\r\n        {messages && renderMessages()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"../Button/Button\";\r\nimport \"./NewMessageBar.scss\";\r\nimport moment from \"moment\";\r\nimport { socket } from \"../../service/socket\";\r\n\r\nexport class NewMessageBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { text: \"\", username: props.username, time: null };\r\n  }\r\n\r\n  sendMessage = () => {\r\n    socket.emit(\"USER_MESSAGE\", {\r\n      username: this.state.username,\r\n      text: this.state.text,\r\n      time: moment().format(\"h:mm:ss\"),\r\n    });\r\n    this.setState({ message: \"\" });\r\n    this.setState({ text: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"new-message-bar\">\r\n        <label className=\"new-message-bar__header\"></label>\r\n\r\n        <form className=\"message__form\" id=\"message__form\">\r\n          <textarea\r\n            id=\"msg\"\r\n            type=\"text\"\r\n            placeholder=\"Enter a message\"\r\n            value={this.state.text}\r\n            name=\"message\"\r\n            autoComplete=\"off\"\r\n            spellCheck=\"false\"\r\n            className=\"message__input \"\r\n            onChange={(event) => {\r\n              this.setState({ text: event.target.value });\r\n            }}\r\n            onKeyDown={(e) => {\r\n              if (e.keyCode === 13 && e.shiftKey === false) {\r\n                e.preventDefault();\r\n                if (this.state.text) {\r\n                  this.sendMessage();\r\n                }\r\n              }\r\n            }}\r\n          />\r\n          <Button\r\n            handleClick={() => {\r\n              if (this.state.text) {\r\n                this.sendMessage();\r\n              }\r\n            }}\r\n            text={\">\"}\r\n            classes={\"send-button\"}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Header } from \"../Header/Header\";\r\nimport panorama from \"../JoinPage/panorama.png\";\r\nimport { SideBar } from \"./SideBar\";\r\nimport { MessagesBar } from \"./MessagesBar\";\r\nimport { NewMessageBar } from \"./NewMessageBar\";\r\nimport \"./ChatPage.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { Button } from \"../Button/Button\";\r\n\r\n// import io from \"socket.io-client\";\r\nimport { socket } from \"../../service/socket\";\r\n\r\nconst messagesTest = [\r\n  { time: \"17:05\", text: \"Hello world!\", username: \"xyz\" },\r\n  { time: \"13:45\", text: \"Równo\", username: \"Jeż\" },\r\n];\r\n\r\nexport default class ChatPage extends React.Component {\r\n  _isMounted = false;\r\n\r\n  state = {\r\n    connected: false,\r\n    username: \"\",\r\n    messages: [],\r\n    users: [],\r\n    room: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    // socket.emit(\"chatMessage\", {author: \"\", message: \"\"})\r\n\r\n    this._isMounted = true;\r\n\r\n    socket.on(\"SERVER_MESSAGE\", (message) => {\r\n      if (this._isMounted) {\r\n        if (this.state.messages) {\r\n          let newMessages = [...this.state.messages, message];\r\n          console.log(\">>>\", newMessages);\r\n          this.setState({ messages: newMessages });\r\n        } else {\r\n          this.setState({ messages: [message] });\r\n        }\r\n      }\r\n    });\r\n\r\n    // Get room and users\r\n    socket.on(\"ROOM_USERS\", ({ room, users }) => {\r\n      console.log(\"ROOM USERS\", room, users);\r\n\r\n      if (this._isMounted) {\r\n        this.setState({ room, users });\r\n      }\r\n    });\r\n\r\n    socket.on(\"SERVER_REGISTER\", (message) => {\r\n      if (this._isMounted) {\r\n        this.setState({\r\n          username: message.username,\r\n          connected: true,\r\n        });\r\n\r\n        if (this.state.messages) {\r\n          let newMessages = [...this.state.messages, message.botMessage];\r\n          console.log(\">>>\", newMessages);\r\n          this.setState({ messages: newMessages });\r\n        } else {\r\n          this.setState({\r\n            messages: [message.botMessage],\r\n          });\r\n        }\r\n      }\r\n\r\n      console.log(\"got SERVER_REGISTER:\\n\", message);\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  sendMessage = (msg) => {\r\n    // ev.preventDefault();\r\n    console.log(\"Sending to server...\");\r\n\r\n    socket.emit(\"USER_MESSAGE\", {\r\n      username: this.state.username,\r\n      text: msg,\r\n      time: moment().format(\"h:mm:ss\"),\r\n    });\r\n    this.setState({ message: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"chat\">\r\n        <div className=\"chat__bg\">\r\n          <img\r\n            alt=\"city\"\r\n            className=\"panorama__image panorama__image--chat\"\r\n            id=\"panoramaImage\"\r\n            src={panorama}\r\n          />\r\n        </div>\r\n        <Header />\r\n        {this.state.connected ? (\r\n          <div className=\"chat__board\">\r\n            <SideBar\r\n              username={this.state.username}\r\n              room={this.state.room}\r\n              users={this.state.users}\r\n            />\r\n            <MessagesBar messages={this.state.messages} />\r\n            <NewMessageBar username={this.state.username} />\r\n          </div>\r\n        ) : (\r\n          // <div className=\"button-wrapper\" style={this.state.btnVisibility}>\r\n          <Link to=\"/\">\r\n            <Button\r\n              text={\"Back\"}\r\n              classes={\"home-button animation-delayed-appear\"}\r\n            />\r\n          </Link>\r\n          // </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nclass List extends React.Component {\r\n  // Initialize the state\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n    };\r\n  }\r\n\r\n  // Fetch the list on first mount\r\n  componentDidMount() {\r\n    this.getList();\r\n  }\r\n\r\n  // Retrieves the list of items from the Express app\r\n  getList = () => {\r\n    fetch(\"/api/getList\")\r\n      .then((res) => res.json())\r\n      .then((list) => this.setState({ list }));\r\n  };\r\n\r\n  render() {\r\n    const { list } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>List of Items</h1>\r\n        {/* Check to see if any items are found*/}\r\n        {list.length ? (\r\n          <div>\r\n            {/* Render the list of items */}\r\n            {list.map((item) => {\r\n              return <div>{item}</div>;\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h2>No List Items Found</h2>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport { Route, Switch, HashRouter } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport JoinPage from \"./components/JoinPage/JoinPage\";\r\nimport ChatPage from \"./components/ChatPage/ChatPage\";\r\nimport List from \"./components/List/List\";\r\nimport \"../src/common/styles/index.scss\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    const App = () => (\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path={process.env.PUBLIC_URL + \"/home\"}\r\n          component={JoinPage}\r\n        />\r\n        <Route\r\n          exact\r\n          path={process.env.PUBLIC_URL + \"/chat\"}\r\n          component={ChatPage}\r\n        />\r\n        <Route exact path={process.env.PUBLIC_URL + \"/list\"} component={List} />\r\n      </Switch>\r\n    );\r\n\r\n    return (\r\n      <Switch>\r\n        <App />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </BrowserRouter>\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/panorama.fee7f301.png\";"],"sourceRoot":""}